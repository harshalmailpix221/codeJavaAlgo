/**
79. Word Search : Medium
Given a 2D board and a word, find if the word exists in the grid.

The word can be constructed from letters of sequentially adjacent cell, where "adjacent" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.
*/

class Solution {
    public boolean exist(char[][] board, String word) {
        char[] w = word.toCharArray();
        int k = 0;
        for(int i=0; i<board.length; i++)
        {
            for(int j=0; j<board[i].length; j++)
            {
                if(helper(board, w, i, j, k)) return true;
            }
        }
        return false;
    }
    
    private boolean helper(char[][] board, char[] word, int i, int j, int k)
    {
        if (k == word.length) return true;
	    if (i<0 || j<0 || i == board.length || j == board[i].length || board[i][j] != word[k]) 
            return false;
        char temp = board[i][j];
        board[i][j] ^= 256;
        boolean exists = helper(board, word, i-1, j, k+1) ||
            helper(board, word, i+1, j, k+1) ||
            helper(board, word, i, j-1, k+1) ||
            helper(board, word, i, j+1, k+1);
        board[i][j] ^= 256;
        return exists;
    }
}
