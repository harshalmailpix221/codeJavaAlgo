// "static void main" must be defined in a public class.


class Heap
{
    int[] A; int heapCount;
    Heap() 
    {
        A = new int[5];
        Arrays.fill(A,-10);
        heapCount = 0;
    }
    
    private int parent(int i)
    {
        return (i-1)/2;
    }
    
    private int left(int i)
    {
        return (2*i)+1;
    }
    
    private int right(int i)
    {
        return (2*i)+2;
    }
    
    //insert
    public void insert(int element)
    {
        if(heapCount >= A.length/2)
        {
            A = Arrays.copyOf(A, A.length*2);
        }
        A[heapCount] = element;
        int i = heapCount;
        int parent = parent(i);
        while(A[i] > A[parent]) 
        {
            parent = parent(i);
            swap(A,i,parent);
            i = parent;
        }
        heapCount++;
    }
    //poll
    public int poll()
    {
        int ret = A[0];
        heapCount--;
        System.out.println("Max : "+ A[heapCount]);
        A[0] = A[heapCount];
        A[heapCount] = 0;
        System.out.println(Arrays.toString(A));
        heapify(0);
        return ret;
    }
    
    //swap
    private void swap(int[] A, int i, int j)
    {
        int temp = A[i];
        A[i] = A[j];
        A[j] = temp;
    }
    
    private boolean isLeaf(int i)
    {
        return i>(heapCount-1)/2 && i<heapCount;
    }
    
    //heapify
    private void heapify(int i)
    {
        if(isLeaf(i)) {
            System.out.println("Leaf : "+ A[i]);
            return;
        }
        int left = left(i);
        int right = left+1;
        if(left>heapCount-1 || right>heapCount-1) return;
           
        System.out.println(A[left]+" "+ A[right]);
        if(A[i] < A[left] || A[i] < A[right])
        {
            if(A[right] < A[left])
            {
                swap(A, i ,left);
                System.out.println(Arrays.toString(A));
                heapify(left);
            }
            else
            {
                swap(A, i, right);
                System.out.println(Arrays.toString(A));
                heapify(right);
            }
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Heap h = new Heap();
        int[] arr = new int[]{10,2,12,3,5,4,1};
        for(int i =0; i<arr.length; i++)
        {
            h.insert(arr[i]);
        }
        System.out.println(Arrays.toString(h.A));
        System.out.println(h.heapCount);
        
        for(int i=0; i<arr.length; i++)
        {
            arr[i] = h.poll();
            System.out.println("-------");
        }
        System.out.println(Arrays.toString(arr));
    }
    
    
    
}
