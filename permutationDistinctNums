/**
46 Medium
Given a collection of distinct integers, return all possible permutations.
*/

class Solution {
    public List<List<Integer>> permute(int[] nums) {
        if(nums == null || nums.length==0) return null;
        List<List<Integer>> res = new ArrayList<>();
        helper(res, new ArrayList<>(), nums);
        return res;
    }
    
    private void helper(List<List<Integer>> res, List<Integer> temp, int[] nums)
    {
        if(temp.size() == nums.length)
        {
            res.add(new ArrayList<>(temp));
        }
        else
        for(int i=0; i<nums.length; i++)
        {
            if(temp.contains(nums[i])) continue;
            temp.add(nums[i]);
            helper(res, temp, nums);
            temp.remove(temp.size()-1);
        }
    }
}
