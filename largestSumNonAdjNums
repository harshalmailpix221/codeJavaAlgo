// "static void main" must be defined in a public class.
/*
Given a list of integers, write a function that returns the largest sum of non-adjacent numbers. Numbers can be 0 or negative.

For example, [2, 4, 6, 2, 5] should return 13, since we pick 2, 6, and 5. [5, 1, 1, 5] should return 10, since we pick 5 and 5.
*/
public class Main {
    public static void main(String[] args) {
        int[] A = new int[]{5, 1, 1, 5};
        int[] memo = new int[A.length];
        Arrays.fill(memo, Integer.MIN_VALUE);
        System.out.println(maxSum(A,A.length-1, memo));
        System.out.println(maxSumDp(A));
    }
    public static int maxSum(int [] A, int n, int[] memo)
    {
        if(n<0) return 0;
        if(memo[n]>Integer.MIN_VALUE) return memo[n];
        memo[n] = Math.max(maxSum(A, n-1,memo), A[n]+maxSum(A,n-2,memo));
        return memo[n];
    }
    /*
    public static int maxSumDp(int[] A)
    {
        int[] dp = new int[A.length+1];
        Arrays.fill(dp, Integer.MIN_VALUE);
        dp[0] = 0;
        dp[1]=A[0];
        for(int i=2; i<dp.length; i++)
        {
            dp[i] = Math.max(dp[i-1],A[i-1]+dp[i-2]);
        }
        return dp[A.length];
    }
    */
    //      0 [2, 1, 6, 2, 5]
    // dp= {0, 2, 1, }
    public static int maxSumDp(int[] A)
    {
        int prev2 = 0;
        int prev = A[0];
        for(int i=1; i<A.length; i++)
        {
            int temp = prev;
            prev = Math.max(prev,A[i]+prev2);
            prev2 = temp;
        }
        return Math.max(prev, prev2);
    }
}
